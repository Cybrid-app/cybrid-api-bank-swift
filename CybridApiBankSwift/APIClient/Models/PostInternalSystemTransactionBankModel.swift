//
// PostInternalSystemTransactionBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PostInternalSystemTransactionBankModel: Codable, JSONEncodable, Hashable {

    public enum DirectionBankModel: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case credit = "credit"
        case debit = "debit"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    /** The internal identifier for the system transaction. */
    public var guid: String
    /** The external identifier for the system transaction. */
    public var providerId: String
    /** The identifier of the account the transaction is associated to. */
    public var systemAccountGuid: String
    /** The amount in the transaction. */
    public var amount: Int
    /** The asset code. */
    public var assetCode: String
    /** The direction of the transaction: debit or credit. */
    public var direction: DirectionBankModel
    /** The description for the transaction. */
    public var description: String?

    public init(guid: String, providerId: String, systemAccountGuid: String, amount: Int, assetCode: String, direction: DirectionBankModel, description: String? = nil) {
        self.guid = guid
        self.providerId = providerId
        self.systemAccountGuid = systemAccountGuid
        self.amount = amount
        self.assetCode = assetCode
        self.direction = direction
        self.description = description
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case guid
        case providerId = "provider_id"
        case systemAccountGuid = "system_account_guid"
        case amount
        case assetCode = "asset_code"
        case direction
        case description
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(guid, forKey: .guid)
        try container.encode(providerId, forKey: .providerId)
        try container.encode(systemAccountGuid, forKey: .systemAccountGuid)
        try container.encode(amount, forKey: .amount)
        try container.encode(assetCode, forKey: .assetCode)
        try container.encode(direction, forKey: .direction)
        try container.encodeIfPresent(description, forKey: .description)
    }
}

