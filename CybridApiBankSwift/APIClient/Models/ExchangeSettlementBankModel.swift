//
// ExchangeSettlementBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@objc public class ExchangeSettlementBankModel: NSObject, Codable, JSONEncodable {

    public enum StateBankModel: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case storing = "storing"
        case pendingCreated = "pending__created"
        case pendingApproved = "pending__approved"
        case failedCreation = "failed_creation"
        case tradesCompleted = "trades_completed"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    /** Auto-generated unique identifier for the exchange settlement. */
    public var guid: String?
    /** The identifier of the exchange that corresponds to this settlement. */
    public var exchangeGuid: String?
    /** The name of the exchange settlement. */
    public var name: String?
    /** The exchange settlement's set of included trade guids. */
    public var tradeGuids: [String]?
    /** The exchange settlement's set of obligation guids. */
    public var exchangeSettlementObligationGuids: [String]?
    /** The exchange settlement's state */
    public var state: StateBankModel?
    /** ISO8601 datetime the exchange settlement was created at. */
    public var createdAt: Date?

    public init(guid: String? = nil, exchangeGuid: String? = nil, name: String? = nil, tradeGuids: [String]? = nil, exchangeSettlementObligationGuids: [String]? = nil, state: StateBankModel? = nil, createdAt: Date? = nil) {
        self.guid = guid
        self.exchangeGuid = exchangeGuid
        self.name = name
        self.tradeGuids = tradeGuids
        self.exchangeSettlementObligationGuids = exchangeSettlementObligationGuids
        self.state = state
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case guid
        case exchangeGuid = "exchange_guid"
        case name
        case tradeGuids = "trade_guids"
        case exchangeSettlementObligationGuids = "exchange_settlement_obligation_guids"
        case state
        case createdAt = "created_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(guid, forKey: .guid)
        try container.encodeIfPresent(exchangeGuid, forKey: .exchangeGuid)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(tradeGuids, forKey: .tradeGuids)
        try container.encodeIfPresent(exchangeSettlementObligationGuids, forKey: .exchangeSettlementObligationGuids)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
    }
}

