//
// FeeAssociationBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct FeeAssociationBankModel: Codable, JSONEncodable, Hashable {

    /** The type of fee; one of platform, network, or bank. */
    public var type: String
    /** The asset the fee is denominated in, e.g., USD. */
    public var asset: String
    /** The quoted amount in base units for the fee. */
    public var quotedAmount: Int
    /** The executed amount in base units for the fee. */
    public var executedAmount: Int?

    public init(type: String, asset: String, quotedAmount: Int, executedAmount: Int? = nil) {
        self.type = type
        self.asset = asset
        self.quotedAmount = quotedAmount
        self.executedAmount = executedAmount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case asset
        case quotedAmount = "quoted_amount"
        case executedAmount = "executed_amount"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(asset, forKey: .asset)
        try container.encode(quotedAmount, forKey: .quotedAmount)
        try container.encodeIfPresent(executedAmount, forKey: .executedAmount)
    }
}

