//
// PostInternalCryptoFundingDepositTransferBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PostInternalCryptoFundingDepositTransferBankModel: Codable, JSONEncodable, Hashable {

    public enum EnvironmentBankModel: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case sandbox = "sandbox"
        case production = "production"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    /** The environment that the deposit is operating in. */
    public var environment: EnvironmentBankModel
    /** The identifier of the deposit address that corresponds to this transfer. */
    public var depositAddressGuid: String
    /** The hash of the blockchain transaction */
    public var txnHash: String
    /** The amount expected being transferred. */
    public var amount: Int

    public init(environment: EnvironmentBankModel, depositAddressGuid: String, txnHash: String, amount: Int) {
        self.environment = environment
        self.depositAddressGuid = depositAddressGuid
        self.txnHash = txnHash
        self.amount = amount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case environment
        case depositAddressGuid = "deposit_address_guid"
        case txnHash = "txn_hash"
        case amount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(environment, forKey: .environment)
        try container.encode(depositAddressGuid, forKey: .depositAddressGuid)
        try container.encode(txnHash, forKey: .txnHash)
        try container.encode(amount, forKey: .amount)
    }
}

