//
// BankSupportedPayoutSymbolsInnerBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BankSupportedPayoutSymbolsInnerBankModel: Codable, JSONEncodable, Hashable {

    /** The payout symbol code. */
    public var symbol: String?
    /** The ISO 3166 country 2-Alpha country code of the payout symbol. */
    public var countryCode: String?
    /** The participants type; one of C2C, C2B, B2C, or B2B. */
    public var participantsType: String?
    /** The payout symbol route; one of bank_account or mobile_wallet. */
    public var route: String?

    public init(symbol: String? = nil, countryCode: String? = nil, participantsType: String? = nil, route: String? = nil) {
        self.symbol = symbol
        self.countryCode = countryCode
        self.participantsType = participantsType
        self.route = route
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case symbol
        case countryCode = "country_code"
        case participantsType = "participants_type"
        case route
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(symbol, forKey: .symbol)
        try container.encodeIfPresent(countryCode, forKey: .countryCode)
        try container.encodeIfPresent(participantsType, forKey: .participantsType)
        try container.encodeIfPresent(route, forKey: .route)
    }
}

