//
// IdentityVerificationDocumentFileBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct IdentityVerificationDocumentFileBankModel: Codable, JSONEncodable, Hashable {

    /** The unique identifier for the file. */
    public var guid: String?
    /** The file type; one of drivers_license_front, drivers_license_back, passport, identification_card, residence_card, selfie, selfie_video, selfie_left, selfie_right, proof_of_address, or incorporation_certificate. */
    public var type: String?
    /** The media type; one of image/jpeg, image/png, application/pdf, application/json, or video/mp4. */
    public var contentType: String?
    /** The name of the file. */
    public var filename: String?

    public init(guid: String? = nil, type: String? = nil, contentType: String? = nil, filename: String? = nil) {
        self.guid = guid
        self.type = type
        self.contentType = contentType
        self.filename = filename
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case guid
        case type
        case contentType = "content_type"
        case filename
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(guid, forKey: .guid)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(contentType, forKey: .contentType)
        try container.encodeIfPresent(filename, forKey: .filename)
    }
}

