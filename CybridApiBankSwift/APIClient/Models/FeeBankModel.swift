//
// FeeBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FeeBankModel: Codable, JSONEncodable, Hashable {

    public enum TypeBankModel: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case spread = "spread"
        case fixed = "fixed"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    /** The fee's type */
    public var type: TypeBankModel?
    /** The percentage amount, in basis points, to apply when charging a fee. */
    public var spreadFee: String?
    /** The fixed amount, in the currency of the parent trading configuration, to apply when charging a fee. */
    public var fixedFee: String?

    public init(type: TypeBankModel? = nil, spreadFee: String? = nil, fixedFee: String? = nil) {
        self.type = type
        self.spreadFee = spreadFee
        self.fixedFee = fixedFee
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case spreadFee = "spread_fee"
        case fixedFee = "fixed_fee"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(spreadFee, forKey: .spreadFee)
        try container.encodeIfPresent(fixedFee, forKey: .fixedFee)
    }
}

