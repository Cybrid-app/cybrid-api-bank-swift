//
// PostDepositBankAccountBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Request body for deposit bank account creation. */
public struct PostDepositBankAccountBankModel: Codable, JSONEncodable, Hashable {

    public enum TypeBankModel: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case main = "main"
        case subAccount = "sub_account"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    /** The account type. To generate deposit bank accounts with their own unique account number set this to \"main\". To generate deposit bank accounts with the same account number as the parent deposit bank account set this to \"sub_account\". This setting will only generate a unique identifier for the deposit bank and will not result in a unique account number being generated. \"sub_account\" is only  available for customer-level deposit bank accounts. */
    public var type: TypeBankModel
    /** The fiat account guid. */
    public var accountGuid: String
    /** The unique identifier for the customer. */
    public var customerGuid: String?
    /** The unique identifier for the bank-level deposit bank account. This is only required for sub-accounts. Required when type is sub_account. */
    public var parentDepositBankAccountGuid: String?
    /** The labels associated with the bank account. */
    public var labels: [String]?

    public init(type: TypeBankModel, accountGuid: String, customerGuid: String? = nil, parentDepositBankAccountGuid: String? = nil, labels: [String]? = nil) {
        self.type = type
        self.accountGuid = accountGuid
        self.customerGuid = customerGuid
        self.parentDepositBankAccountGuid = parentDepositBankAccountGuid
        self.labels = labels
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case accountGuid = "account_guid"
        case customerGuid = "customer_guid"
        case parentDepositBankAccountGuid = "parent_deposit_bank_account_guid"
        case labels
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(accountGuid, forKey: .accountGuid)
        try container.encodeIfPresent(customerGuid, forKey: .customerGuid)
        try container.encodeIfPresent(parentDepositBankAccountGuid, forKey: .parentDepositBankAccountGuid)
        try container.encodeIfPresent(labels, forKey: .labels)
    }
}

