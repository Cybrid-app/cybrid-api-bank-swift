//
// IdentityVerificationBusinessAssociateBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct IdentityVerificationBusinessAssociateBankModel: Codable, JSONEncodable, Hashable {

    /** The Persona identifier of the business associate backing inquiry. */
    public var personaInquiryId: String?
    /** The Persona state of the backing inquiry; one of waiting, pending, reviewing, processing, expired, completed, or unknown. */
    public var personaState: String?
    /** The business associate role; one of director or owner. */
    public var role: String?
    /** The business associate email address. */
    public var emailAddress: String?

    public init(personaInquiryId: String? = nil, personaState: String? = nil, role: String? = nil, emailAddress: String? = nil) {
        self.personaInquiryId = personaInquiryId
        self.personaState = personaState
        self.role = role
        self.emailAddress = emailAddress
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case personaInquiryId = "persona_inquiry_id"
        case personaState = "persona_state"
        case role
        case emailAddress = "email_address"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(personaInquiryId, forKey: .personaInquiryId)
        try container.encodeIfPresent(personaState, forKey: .personaState)
        try container.encodeIfPresent(role, forKey: .role)
        try container.encodeIfPresent(emailAddress, forKey: .emailAddress)
    }
}

