//
// IdentityVerificationDocumentBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct IdentityVerificationDocumentBankModel: Codable, JSONEncodable, Hashable {

    /** Auto-generated unique identifier for the document. */
    public var guid: String?
    /** The document type; one of drivers_license, passport, passport_card, residence_card, visa, social_security_number, tax_identification_number, selfie, proof_of_address, formation_document, or employer_identification_number. */
    public var type: String?
    /** Whether the document has been validated. */
    public var validated: Bool?
    /** The document expiration date. */
    public var expirationDate: Date?
    /** The files associated with the document. */
    public var files: [IdentityVerificationDocumentFileBankModel]?

    public init(guid: String? = nil, type: String? = nil, validated: Bool? = nil, expirationDate: Date? = nil, files: [IdentityVerificationDocumentFileBankModel]? = nil) {
        self.guid = guid
        self.type = type
        self.validated = validated
        self.expirationDate = expirationDate
        self.files = files
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case guid
        case type
        case validated
        case expirationDate = "expiration_date"
        case files
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(guid, forKey: .guid)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(validated, forKey: .validated)
        try container.encodeIfPresent(expirationDate, forKey: .expirationDate)
        try container.encodeIfPresent(files, forKey: .files)
    }
}

