//
// PlanTravelRuleInfoBankModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The travel rule information associated with the plan. */
public struct PlanTravelRuleInfoBankModel: Codable, JSONEncodable, Hashable {

    public var originatingParty: TravelRuleInfoPartyBankModel
    public var receivingParty: TravelRuleInfoPartyBankModel
    public var ultimateOriginatingParty: TravelRuleInfoPartyBankModel?
    public var ultimateReceivingParty: TravelRuleInfoPartyBankModel?

    public init(originatingParty: TravelRuleInfoPartyBankModel, receivingParty: TravelRuleInfoPartyBankModel, ultimateOriginatingParty: TravelRuleInfoPartyBankModel? = nil, ultimateReceivingParty: TravelRuleInfoPartyBankModel? = nil) {
        self.originatingParty = originatingParty
        self.receivingParty = receivingParty
        self.ultimateOriginatingParty = ultimateOriginatingParty
        self.ultimateReceivingParty = ultimateReceivingParty
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case originatingParty = "originating_party"
        case receivingParty = "receiving_party"
        case ultimateOriginatingParty = "ultimate_originating_party"
        case ultimateReceivingParty = "ultimate_receiving_party"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(originatingParty, forKey: .originatingParty)
        try container.encode(receivingParty, forKey: .receivingParty)
        try container.encodeIfPresent(ultimateOriginatingParty, forKey: .ultimateOriginatingParty)
        try container.encodeIfPresent(ultimateReceivingParty, forKey: .ultimateReceivingParty)
    }
}

