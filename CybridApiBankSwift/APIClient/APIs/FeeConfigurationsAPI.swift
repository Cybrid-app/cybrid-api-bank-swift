//
// FeeConfigurationsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class FeeConfigurationsAPI {

    /**
     Create Fee Configuration
     
     - parameter postFeeConfigurationBankModel: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    @discardableResult
    open class func createFeeConfiguration(postFeeConfigurationBankModel: PostFeeConfigurationBankModel, apiResponseQueue: DispatchQueue = CybridApiBankSwiftAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<FeeConfigurationBankModel, ErrorResponse>) -> Void)) -> RequestTask {
        return createFeeConfigurationWithRequestBuilder(postFeeConfigurationBankModel: postFeeConfigurationBankModel).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(.success(response.body))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Create Fee Configuration
     - POST /api/fee_configurations
     - Creates a fee configuration.  Required scope: **banks:write**
     - BASIC:
       - type: http
       - name: BearerAuth
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter postFeeConfigurationBankModel: (body)  
     - returns: RequestBuilder<FeeConfigurationBankModel> 
     */
    open class func createFeeConfigurationWithRequestBuilder(postFeeConfigurationBankModel: PostFeeConfigurationBankModel) -> RequestBuilder<FeeConfigurationBankModel> {
        let localVariablePath = "/api/fee_configurations"
        let localVariableURLString = CybridApiBankSwiftAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: postFeeConfigurationBankModel)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeeConfigurationBankModel>.Type = CybridApiBankSwiftAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get Fee Configuration
     
     - parameter feeConfigurationGuid: (path) Identifier for the fee configuration. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    @discardableResult
    open class func getFeeConfiguration(feeConfigurationGuid: String, apiResponseQueue: DispatchQueue = CybridApiBankSwiftAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<FeeConfigurationBankModel, ErrorResponse>) -> Void)) -> RequestTask {
        return getFeeConfigurationWithRequestBuilder(feeConfigurationGuid: feeConfigurationGuid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(.success(response.body))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Get Fee Configuration
     - GET /api/fee_configurations/{fee_configuration_guid}
     - Retrieves a fee configuration.  Required scope: **banks:read**
     - BASIC:
       - type: http
       - name: BearerAuth
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter feeConfigurationGuid: (path) Identifier for the fee configuration. 
     - returns: RequestBuilder<FeeConfigurationBankModel> 
     */
    open class func getFeeConfigurationWithRequestBuilder(feeConfigurationGuid: String) -> RequestBuilder<FeeConfigurationBankModel> {
        var localVariablePath = "/api/fee_configurations/{fee_configuration_guid}"
        let feeConfigurationGuidPreEscape = "\(APIHelper.mapValueToPathItem(feeConfigurationGuid))"
        let feeConfigurationGuidPostEscape = feeConfigurationGuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{fee_configuration_guid}", with: feeConfigurationGuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = CybridApiBankSwiftAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeeConfigurationBankModel>.Type = CybridApiBankSwiftAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List Fee Configurations
     
     - parameter page: (query)  (optional)
     - parameter perPage: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    @discardableResult
    open class func listFeeConfigurations(page: Int? = nil, perPage: Int? = nil, apiResponseQueue: DispatchQueue = CybridApiBankSwiftAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<FeeConfigurationListBankModel, ErrorResponse>) -> Void)) -> RequestTask {
        return listFeeConfigurationsWithRequestBuilder(page: page, perPage: perPage).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(.success(response.body))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     List Fee Configurations
     - GET /api/fee_configurations
     - Retrieves a listing of fee configurations for a bank.  Required scope: **banks:read**
     - BASIC:
       - type: http
       - name: BearerAuth
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter page: (query)  (optional)
     - parameter perPage: (query)  (optional)
     - returns: RequestBuilder<FeeConfigurationListBankModel> 
     */
    open class func listFeeConfigurationsWithRequestBuilder(page: Int? = nil, perPage: Int? = nil) -> RequestBuilder<FeeConfigurationListBankModel> {
        let localVariablePath = "/api/fee_configurations"
        let localVariableURLString = CybridApiBankSwiftAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": page?.encodeToJSON(),
            "per_page": perPage?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FeeConfigurationListBankModel>.Type = CybridApiBankSwiftAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
